
section#sprite-svg.section-modal
      h3 JS
      .section-modal__body
          a(href="#!" rel="delegation").popups-init-js делегирование событий
          a(href="#!" rel="cycle").popups-init-js добавление из js --файла стилей в шапку и работа со стилями
          a(href="#!" rel="children").popups-init-js работа с массивом потомков
          a(href="#!" rel="infinityCount").popups-init-js бесконечный счетчик



section#wordpress.wordpress.section-modal
      h3 WORDPRESS
      .section-modal__body
           a(href="#!" rel="1-popup").popups-init-js выбор страницы для вывода
           a(href="#!" rel="2-popup").popups-init-js вывод цикла записей

//==========js==========

section#modaL-8.modaL
  #infinityCount.popups
      .popups__overlay
        .popups__inner
          i.icon-close21.popup__close.close-js
          .popups__line
            p(style="background:  Crimson;  margin: 20px 0 5px;") счетчик работает бесконечно и внутри бесконечно вызывается функция. подходит например для слайдера с автосменой слайдов. память браузера отключает сайт при переполнении
            p (function main(counter){
            p drowLeft();
            p setTimeout(main,5000);
            p })
            p (0);

section#modaL-7.modaL
  #children.popups
      .popups__overlay
        .popups__inner
          i.icon-close21.popup__close.close-js
          .popups__line

                p(style="background:  Crimson;  margin: 20px 0 5px;") получение именно массива потомков. можно применять все методы для массивов
                p   let infinity = document.querySelector('.infinity');
                p   let singles = Array.prototype.slice.call(infinity.childNodes);

                p(style="background:  DarkSalmon;  margin: 20px 0 5px;") получение псевдомассива  потомков
                p var children = document.querySelector('wrap').children;

                p(style="background:  DarkSalmon;margin: 20px 0    5px;") или
                p var children = parg.childNodes;
                p(style="background:  DarkSalmon; margin: 20px 0   5px;")  выведем содержимое первого узла псевдомассива массива потомков
                p  console.log(parent.childNodes[0].textContent);
                p(style="background:  DarkSalmon; margin: 20px 0   5px;") перебор псевдомассива потомков
                p      let array = ul.childNodes;
                p      array.forEach((cell)=>{
                p     cell.addEventListener('click', function(event){
                p         console.log(event.target.innerHTML);
                p     });})
                p(style="background:  DarkSalmon; margin: 20px 0   5px;")  сделать что-то с каждым внутренним элементом псевдомассива потомков
                p for (var i = 0; i < children.length; ++i) { console.log(children[i]);}
                p(style="background:  DarkSalmon; margin: 20px 0   5px;")  один из способов удалить все дочерние элементы из элемента
                p       while (box.firstChild) {
                p           //Список является ссылкой, то есть он будет переиндексирован перед каждым вызовом
                p           box.removeChild(box.firstChild);
                p   }
                p(style="background:  DarkSalmon; margin: 20px 0   5px;") или цикл for псевдомассива потомков
                p  var slides = document.querySelector(wrap).children;
                p for (const item of slides){
                p    item.classList.add("slider__item")
                p }














section#modaL-5.modaL
  #cycle.popups
      .popups__overlay
        .popups__inner
          i.icon-close21.popup__close.close-js
          .popups__line
                p   addStyle(){
                p       const style = document.createElement('style');
                p       style.id = "new-style";
                p       document.head.appendChild(style);
                p   style.textContent= `
                p       .section{
                p       overflow: hidden;
                p   }
                p   .section__wrap{
                p       display: flex;
                p       transition: all .2s ease-in-out;
                p   }
                p   `
                p   }

section#modaL-6.modaL
  #delegation.popups
      .popups__overlay
        .popups__inner
          i.icon-close21.popup__close.close-js
          .popups__line
              p(style="color: DeepSkyBlue") pug
              .m10
              p section#training.training
              p .container
              p ul 
              p   li first
              p   li second
              p   li fird
              button.button(type="text") Добавить li 
              .m10
              p(style="color: DeepSkyBlue") JS
              .m10
              p  const MyTraining = () => {
              p    var ul =  document.querySelector("ul");
              p    let but =  document.querySelector(".button");
              p  
              p    let array = ul.childNodes;
              p    array.forEach((cell)=>{  
              p      cell.addEventListener('click', function(event){
              p        console.log(event.target.innerHTML); 
              p      });
              p      })
              p  
              p      ul.addEventListener('click', function(event){
              p      let et =   event.target
              p  if (et.tagName == 'LI') {
              p    console.log(et.innerHTML); 
              p    et.style.backgroundColor = "red"
              p  }
              p      }); 
              p  
              p      const foo = function(){
              p       let LiNew = document.createElement('li');
              p       LiNew.innerHTML = " новый"
              p        ul.append(LiNew)
              p        }
              p  
              p      but.addEventListener('click',   foo);
              p    };MyTraining();
              p(style="color: DeepSkyBlue") comments 
              p главное  -- событие по родителю сработает на каждом потомке. чтобы отличить родителя от потомка вводится условие.








// -----------------WORDPRESS----------------
section#modaL-2.modaL
  #1-popup.popup.popups
      .popups__overlay
        .popups__inner
          i.icon-close21.popup__close.close-js
          .popups__line
              p по имени шаблона
                .card__info.fz if( is_page_template( 'templates/template-single.php' )) {  get_template_part('./includes/bunner-single') }
          .popups__line
              p по id
                .card__info.fz $id=15;  if( is_page($id) ) {}else{}
          .popups__line
              p по слагу страницы
                .card__info.fz if (get_page_by_path("how-we-work")->ID == get_the_ID()) { }else{}
          

  #2-popup.popup.popups
      .popups__overlay
        .popups__inner
          i.icon-close21.popup__close.close-js
          .popups__line
                p  <?php
                p          global $post;
                p          $args = array(
                p          'post_type'=>'post',
                p          'post_type'=>'cases',
                p          'cat' => 3,
                p          'publish' => true,
                p          'numberposts' => 100,,
                p          'p' => 129,            --- если выводить определенный пост
                p          'p' => $postID         --- если выводить переменную полученную ajax
                p          );
                p
                p          $projects = get_posts($args);
                p
                p  if ($projects ) {
                p
                p          foreach($projects as $post){
                p              setup_postdata( $post );
                p  ?>
                p  html html html html html html html html одной записи
                p  <?php
                p  }
                p  }
                p  ?>
                p





